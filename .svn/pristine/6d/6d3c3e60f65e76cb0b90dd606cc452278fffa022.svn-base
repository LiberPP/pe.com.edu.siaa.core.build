package pe.com.edu.siaa.core.ejb.dao.matricula.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Stateless;
import javax.persistence.Query;

import pe.com.edu.siaa.core.ejb.dao.generic.impl.GenericAcademicoDAOImpl;
import pe.com.edu.siaa.core.ejb.dao.matricula.local.ConvalidacionPlanEstudioDaoLocal;
import pe.com.edu.siaa.core.ejb.factory.CollectionUtil;
import pe.com.edu.siaa.core.model.dto.matricula.ConvalidacionPlanEstudioDTO;
import pe.com.edu.siaa.core.model.jpa.matricula.ConvalidacionPlanEstudio;
import pe.com.edu.siaa.core.model.util.StringUtils;

/**
 * La Class ConvalidacionPlanEstudioDaoImpl.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 19:53:48 COT 2017
 * @since SIAA-CORE 2.1
 */
@Stateless
public class ConvalidacionPlanEstudioDaoImpl extends  GenericAcademicoDAOImpl<String, ConvalidacionPlanEstudio> implements ConvalidacionPlanEstudioDaoLocal  {

	@Override	 
    public Map<String,Map<String,String>> obtenerConvalidacionPlanEstudioMap(List<String> listaIdDetPlanEstudio) throws Exception {
		Map<String,Map<String,String>> resultado = new HashMap<String,Map<String,String>>();
		if (CollectionUtil.isEmpty(listaIdDetPlanEstudio)) {
			return resultado;
		}
		Map<String, Object> parametros = new HashMap<String, Object>();
	    StringBuilder jpaql = new StringBuilder();
	    jpaql.append(" select o.detPlanEstudio.idDetPlanEstudio,o.detPlanEstudioConvalidar.idDetPlanEstudio from ConvalidacionPlanEstudio o where  ");           
	    jpaql.append(" o.detPlanEstudio.idDetPlanEstudio in (:listaIdDetPlanEstudio) ");
	    parametros.put("listaIdDetPlanEstudio", listaIdDetPlanEstudio);
	    Query query = createQuery(jpaql.toString(), parametros);	
	    List<Object[]> listaResul =  query.getResultList();
	    for (Object[] objects : listaResul) {
			String key = objects[0] + "";
			if (!resultado.containsKey(key)) {
				Map<String, String> value =  new HashMap<String,String>();
				value.put(objects[1] + "", "");
				resultado.put(key, value );
			} else {
				Map<String, String> value = resultado.get(key);
				value.put(objects[1] + "", "");
				resultado.put(key, value );
			}
		}
		return resultado;
	}
    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.ConvalidacionPlanEstudioDaoLocal#listarConvalidacionPlanEstudio(pe.com.edu.siaa.core.model.jpa.seguridad.ConvalidacionPlanEstudio)
     */  
    @Override	 
    public List<ConvalidacionPlanEstudio> listarConvalidacionPlanEstudio(ConvalidacionPlanEstudioDTO convalidacionPlanEstudio) {
        Query query = generarQueryListaConvalidacionPlanEstudio(convalidacionPlanEstudio, false);
        query.setFirstResult(convalidacionPlanEstudio.getStartRow());
        query.setMaxResults(convalidacionPlanEstudio.getOffset());
        return query.getResultList();
    }   
   
    /**
     * Generar query lista ConvalidacionPlanEstudio.
     *
     * @param ConvalidacionPlanEstudioDTO el convalidacionPlanEstudio
     * @param esContador el es contador
     * @return the query
     */
    private Query generarQueryListaConvalidacionPlanEstudio(ConvalidacionPlanEstudioDTO convalidacionPlanEstudio, boolean esContador) {
        Map<String, Object> parametros = new HashMap<String, Object>();
        StringBuilder jpaql = new StringBuilder();
        if (esContador) {
            jpaql.append(" select count(o.idConvalidacionPlanEstudio) from ConvalidacionPlanEstudio o where 1=1 ");
        } else {
            jpaql.append(" select o from ConvalidacionPlanEstudio o where 1=1 ");           
        }
		if (!StringUtils.isNullOrEmpty(convalidacionPlanEstudio.getSearch())) {
	          jpaql.append(" and upper(o.idConvalidacionPlanEstudio) like :search ");
	          parametros.put("search", "%" + convalidacionPlanEstudio.getSearch().toUpperCase() + "%");
	    } else {
		}
        if (!esContador) {
            //jpaql.append(" ORDER BY 1 ");
        }
        Query query = createQuery(jpaql.toString(), parametros);
        return query;
    }

    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.ConvalidacionPlanEstudioDaoLocal#contarListar{entity.getClassName()}(pe.com.edu.siaa.core.model.jpa.seguridad.ConvalidacionPlanEstudioDTO)
     */
	@Override
    public int contarListarConvalidacionPlanEstudio(ConvalidacionPlanEstudioDTO convalidacionPlanEstudio) {
        int resultado = 0;
        try {
            //StringBuilder jpaql = new StringBuilder();
            Query query = generarQueryListaConvalidacionPlanEstudio(convalidacionPlanEstudio, true);
            resultado = ((Long) query.getSingleResult()).intValue();
        } catch (Exception e) {
            resultado = 0;
        }
        return resultado;
    }
    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.ConvalidacionPlanEstudioDaoLocal#generarIdConvalidacionPlanEstudio()
     */
	 @Override
    public String generarIdConvalidacionPlanEstudio() {
        String resultado = "1";
        Query query = createQuery("select max(o.idConvalidacionPlanEstudio) from ConvalidacionPlanEstudio o", null);
        List<Object> listLong =  query.getResultList();
        if (listLong != null && listLong.size() > 0 && listLong.get(0) != null)  {
            Long ultimoIdGenerado = Long.valueOf(listLong.get(0).toString());
            if (!StringUtils.isNullOrEmpty(ultimoIdGenerado)) {
                resultado = resultado + ultimoIdGenerado;
            }
        }
        return resultado;
    }
   
}