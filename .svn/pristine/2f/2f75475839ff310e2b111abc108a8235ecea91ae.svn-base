package pe.com.edu.siaa.core.model.jpa.matricula;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import pe.com.edu.siaa.core.model.jpa.admision.Escuela;
import pe.com.edu.siaa.core.model.util.ConfiguracionEntityManagerUtil;

/**
 * La Class Consejero.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 09:56:47 COT 2017
 * @since SIAA-CORE 2.1
 */
@Entity
@Table(name = "Consejero", schema = ConfiguracionEntityManagerUtil.ESQUEMA_ACADEMICO)
public class Consejero implements Serializable {
 
    /** La Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;
   
    /** El id consejero. */
    @Id
    @Column(name = "idConsejero" , length = 24)
    private String idConsejero;
   
    /** El organodirectivo. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idOrganoDirectivo", referencedColumnName = "idOrganoDirectivo")
    private OrganoDirectivo organodirectivo;
   
    /** El escuela. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idEscuela", referencedColumnName = "idEscuela")
    private Escuela escuela;
   
    /** El estado. */
    @Column(name = "estado" , length = 1)
    private String estado;
   
    /**
     * Instancia un nuevo consejero.
     */
    public Consejero() {
    }
   
   
    /**
     * Instancia un nuevo consejero.
     *
     * @param idConsejero el id consejero
     * @param organodirectivo el organodirectivo
     * @param escuela el escuela
     * @param estado el estado
     */
    public Consejero(String idConsejero, OrganoDirectivo organodirectivo,Escuela escuela,String estado ) {
        super();
        this.idConsejero = idConsejero;
        this.organodirectivo = organodirectivo;
        this.escuela = escuela;
        this.estado = estado;
    }
   
    //get y set
    /**
     * Obtiene id consejero.
     *
     * @return id consejero
     */
     public String getIdConsejero() {
        return this.idConsejero;
    }
    /**
     * Establece el id consejero.
     *
     * @param idConsejero el new id consejero
     */
    public void setIdConsejero(String idConsejero) {
        this.idConsejero = idConsejero;
    }
    /**
     * Obtiene organodirectivo.
     *
     * @return organodirectivo
     */
     public OrganoDirectivo getOrganodirectivo() {
        return this.organodirectivo;
    }
    /**
     * Establece el organodirectivo.
     *
     * @param organodirectivo el new organodirectivo
     */
    public void setOrganodirectivo(OrganoDirectivo organodirectivo) {
        this.organodirectivo = organodirectivo;
    }
    /**
     * Obtiene escuela.
     *
     * @return escuela
     */
     public Escuela getEscuela() {
        return this.escuela;
    }
    /**
     * Establece el escuela.
     *
     * @param escuela el new escuela
     */
    public void setEscuela(Escuela escuela) {
        this.escuela = escuela;
    }
    /**
     * Obtiene estado.
     *
     * @return estado
     */
     public String getEstado() {
        return this.estado;
    }
    /**
     * Establece el estado.
     *
     * @param estado el new estado
     */
    public void setEstado(String estado) {
        this.estado = estado;
    }
    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((idConsejero == null) ? 0 : idConsejero.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        Consejero other = (Consejero) obj;
        if (idConsejero == null) {
            if (other.idConsejero != null) {
                return false;
            }
        } else if (!idConsejero.equals(other.idConsejero)) {
            return false;
        }
        return true;
    }
    
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "Consejero [idConsejero=" + idConsejero + "]";
    }
   
}