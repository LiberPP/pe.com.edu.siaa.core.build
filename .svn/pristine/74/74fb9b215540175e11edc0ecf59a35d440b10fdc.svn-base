package pe.com.edu.siaa.core.model.jpa.matricula;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import pe.com.edu.siaa.core.model.jpa.admision.AnhoSemestre;
import pe.com.edu.siaa.core.model.util.ConfiguracionEntityManagerUtil;

/**
 * La Class AperturaCierreMatricula.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 09:56:52 COT 2017
 * @since SIAA-CORE 2.1
 */
@Entity
@Table(name = "AperturaCierreMatricula", schema = ConfiguracionEntityManagerUtil.ESQUEMA_ACADEMICO)
public class AperturaCierreMatricula implements Serializable {
 
    /** La Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;
   
    /** El id apertura cierre matricula. */
    @Id
    @Column(name = "idAperturaCierreMatricula" , length = 8)
    private String idAperturaCierreMatricula;
   
    /** El anho semestre. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idAnhoSemestre", referencedColumnName = "idAnhoSemestre")
    private AnhoSemestre anhoSemestre;
   
    /** El tipo. */
    @Column(name = "tipo" , length = 2)
    private String tipo;
   
    /** El fecha inicio. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaInicio")
    private Date fechaInicio;
   
    /** El fecha cierre normal. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaCierreNormal")
    private Date fechaCierreNormal;
   
    /** El fecha cierre extemporanea. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaCierreExtemporanea")
    private Date fechaCierreExtemporanea;
   
    /** El usuario creacion. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuarioCreacion", referencedColumnName = "idPersonal")
    private Personal usuarioCreacion;
   
    /** El fecha creacion. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaCreacion")
    private Date fechaCreacion;
   
    /** El usuario modificacion. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuarioModificacion", referencedColumnName = "idPersonal")
    private Personal usuarioModificacion;
   
    /** El fecha modificacion. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaModificacion")
    private Date fechaModificacion;
   
    /** El estado. */
    @Column(name = "estado" , length = 1)
    private String estado;
   
    /**
     * Instancia un nuevo apertura cierre matricula.
     */
    public AperturaCierreMatricula() {
    }
   
   
    /**
     * Instancia un nuevo apertura cierre matricula.
     *
     * @param idAperturaCierreMatricula el id apertura cierre matricula
     * @param anhoSemestre el anho semestre
     * @param tipo el tipo
     * @param fechaInicio el fecha inicio
     * @param fechaCierreNormal el fecha cierre normal
     * @param fechaCierreExtemporanea el fecha cierre extemporanea
     * @param usuarioCreacion el usuario creacion
     * @param fechaCreacion el fecha creacion
     * @param usuarioModificacion el usuario modificacion
     * @param fechaModificacion el fecha modificacion
     * @param estado el estado
     */
    public AperturaCierreMatricula(String idAperturaCierreMatricula, AnhoSemestre anhoSemestre,String tipo, Date fechaInicio, Date fechaCierreNormal, Date fechaCierreExtemporanea, Personal usuarioCreacion,Date fechaCreacion, Personal usuarioModificacion,Date fechaModificacion, String estado ) {
        super();
        this.idAperturaCierreMatricula = idAperturaCierreMatricula;
        this.anhoSemestre = anhoSemestre;
        this.tipo = tipo;
        this.fechaInicio = fechaInicio;
        this.fechaCierreNormal = fechaCierreNormal;
        this.fechaCierreExtemporanea = fechaCierreExtemporanea;
        this.usuarioCreacion = usuarioCreacion;
        this.fechaCreacion = fechaCreacion;
        this.usuarioModificacion = usuarioModificacion;
        this.fechaModificacion = fechaModificacion;
        this.estado = estado;
    }
   
    //get y set
    /**
     * Obtiene id apertura cierre matricula.
     *
     * @return id apertura cierre matricula
     */
     public String getIdAperturaCierreMatricula() {
        return this.idAperturaCierreMatricula;
    }
    /**
     * Establece el id apertura cierre matricula.
     *
     * @param idAperturaCierreMatricula el new id apertura cierre matricula
     */
    public void setIdAperturaCierreMatricula(String idAperturaCierreMatricula) {
        this.idAperturaCierreMatricula = idAperturaCierreMatricula;
    }
    /**
     * Obtiene anho semestre.
     *
     * @return anho semestre
     */
     public AnhoSemestre getAnhoSemestre() {
        return this.anhoSemestre;
    }
    /**
     * Establece el anho semestre.
     *
     * @param anhoSemestre el new anho semestre
     */
    public void setAnhoSemestre(AnhoSemestre anhoSemestre) {
        this.anhoSemestre = anhoSemestre;
    }
    /**
     * Obtiene tipo.
     *
     * @return tipo
     */
     public String getTipo() {
        return this.tipo;
    }
    /**
     * Establece el tipo.
     *
     * @param tipo el new tipo
     */
    public void setTipo(String tipo) {
        this.tipo = tipo;
    }
    /**
     * Obtiene fecha inicio.
     *
     * @return fecha inicio
     */
     public Date getFechaInicio() {
        return this.fechaInicio;
    }
    /**
     * Establece el fecha inicio.
     *
     * @param fechaInicio el new fecha inicio
     */
    public void setFechaInicio(Date fechaInicio) {
        this.fechaInicio = fechaInicio;
    }
    /**
     * Obtiene fecha cierre normal.
     *
     * @return fecha cierre normal
     */
     public Date getFechaCierreNormal() {
        return this.fechaCierreNormal;
    }
    /**
     * Establece el fecha cierre normal.
     *
     * @param fechaCierreNormal el new fecha cierre normal
     */
    public void setFechaCierreNormal(Date fechaCierreNormal) {
        this.fechaCierreNormal = fechaCierreNormal;
    }
    /**
     * Obtiene fecha cierre extemporanea.
     *
     * @return fecha cierre extemporanea
     */
     public Date getFechaCierreExtemporanea() {
        return this.fechaCierreExtemporanea;
    }
    /**
     * Establece el fecha cierre extemporanea.
     *
     * @param fechaCierreExtemporanea el new fecha cierre extemporanea
     */
    public void setFechaCierreExtemporanea(Date fechaCierreExtemporanea) {
        this.fechaCierreExtemporanea = fechaCierreExtemporanea;
    }
    /**
     * Obtiene usuario creacion.
     *
     * @return usuario creacion
     */
     public Personal getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    /**
     * Establece el usuario creacion.
     *
     * @param usuarioCreacion el new usuario creacion
     */
    public void setUsuarioCreacion(Personal usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    /**
     * Obtiene fecha creacion.
     *
     * @return fecha creacion
     */
     public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    /**
     * Establece el fecha creacion.
     *
     * @param fechaCreacion el new fecha creacion
     */
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    /**
     * Obtiene usuario modificacion.
     *
     * @return usuario modificacion
     */
     public Personal getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    /**
     * Establece el usuario modificacion.
     *
     * @param usuarioModificacion el new usuario modificacion
     */
    public void setUsuarioModificacion(Personal usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    /**
     * Obtiene fecha modificacion.
     *
     * @return fecha modificacion
     */
     public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    /**
     * Establece el fecha modificacion.
     *
     * @param fechaModificacion el new fecha modificacion
     */
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
    /**
     * Obtiene estado.
     *
     * @return estado
     */
     public String getEstado() {
        return this.estado;
    }
    /**
     * Establece el estado.
     *
     * @param estado el new estado
     */
    public void setEstado(String estado) {
        this.estado = estado;
    }
    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((idAperturaCierreMatricula == null) ? 0 : idAperturaCierreMatricula.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        AperturaCierreMatricula other = (AperturaCierreMatricula) obj;
        if (idAperturaCierreMatricula == null) {
            if (other.idAperturaCierreMatricula != null) {
                return false;
            }
        } else if (!idAperturaCierreMatricula.equals(other.idAperturaCierreMatricula)) {
            return false;
        }
        return true;
    }
    
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "AperturaCierreMatricula [idAperturaCierreMatricula=" + idAperturaCierreMatricula + "]";
    }
   
}