package pe.com.edu.siaa.core.model.jpa.admision;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import pe.com.edu.siaa.core.model.jpa.matricula.OrganoDirectivo;
import pe.com.edu.siaa.core.model.util.ConfiguracionEntityManagerUtil;

/**
 * La Class TipoPersona.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 09:56:51 COT 2017
 * @since SIAA-CORE 2.1
 */
@Entity
@Table(name = "TipoPersona", schema = ConfiguracionEntityManagerUtil.ESQUEMA_ACADEMICO)
public class TipoPersona implements Serializable {
 
    /** La Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;
   
    /** El id tipo persona. */
    @Id
    @Column(name = "idTipoPersona" , precision = 18 , scale = 0)
    private Long idTipoPersona;
   
    /** El descripcion. */
    @Column(name = "descripcion" , length = 50)
    private String descripcion;
   
    /** El tipo persona organo directivo list. */
    @OneToMany(mappedBy = "tipoPersona", fetch = FetchType.LAZY)
    private List<OrganoDirectivo> tipoPersonaOrganoDirectivoList = new ArrayList<OrganoDirectivo>();
    
    /** El tipo persona persona list. */
    @OneToMany(mappedBy = "tipoPersona", fetch = FetchType.LAZY)
    private List<Persona> tipoPersonaPersonaList = new ArrayList<Persona>();
    
    /**
     * Instancia un nuevo tipo persona.
     */
    public TipoPersona() {
    }
   
   
    /**
     * Instancia un nuevo tipo persona.
     *
     * @param idTipoPersona el id tipo persona
     * @param descripcion el descripcion
     */
    public TipoPersona(Long idTipoPersona, String descripcion ) {
        super();
        this.idTipoPersona = idTipoPersona;
        this.descripcion = descripcion;
    }
   
    //get y set
    /**
     * Obtiene id tipo persona.
     *
     * @return id tipo persona
     */
     public Long getIdTipoPersona() {
        return this.idTipoPersona;
    }
    /**
     * Establece el id tipo persona.
     *
     * @param idTipoPersona el new id tipo persona
     */
    public void setIdTipoPersona(Long idTipoPersona) {
        this.idTipoPersona = idTipoPersona;
    }
    /**
     * Obtiene descripcion.
     *
     * @return descripcion
     */
     public String getDescripcion() {
        return this.descripcion;
    }
    /**
     * Establece el descripcion.
     *
     * @param descripcion el new descripcion
     */
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    /**
     * Establece el tipo persona organo directivo list.
     *
     * @param tipoPersonaOrganoDirectivoList el new tipo persona organo directivo list
     */
    public List<OrganoDirectivo> getTipoPersonaOrganoDirectivoList(){
        return this.tipoPersonaOrganoDirectivoList;
    }
    /**
     * Establece el tipo persona list.
     *
     * @param tipoPersonaList el new tipo persona list
     */
    public void setTipoPersonaOrganoDirectivoList(List<OrganoDirectivo> tipoPersonaOrganoDirectivoList) {
        this.tipoPersonaOrganoDirectivoList = tipoPersonaOrganoDirectivoList;
    }   
    /**
     * Establece el tipo persona persona list.
     *
     * @param tipoPersonaPersonaList el new tipo persona persona list
     */
    public List<Persona> getTipoPersonaPersonaList(){
        return this.tipoPersonaPersonaList;
    }
    /**
     * Establece el tipo persona list.
     *
     * @param tipoPersonaList el new tipo persona list
     */
    public void setTipoPersonaPersonaList(List<Persona> tipoPersonaPersonaList) {
        this.tipoPersonaPersonaList = tipoPersonaPersonaList;
    }   
    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((idTipoPersona == null) ? 0 : idTipoPersona.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        TipoPersona other = (TipoPersona) obj;
        if (idTipoPersona == null) {
            if (other.idTipoPersona != null) {
                return false;
            }
        } else if (!idTipoPersona.equals(other.idTipoPersona)) {
            return false;
        }
        return true;
    }
    
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "TipoPersona [idTipoPersona=" + idTipoPersona + "]";
    }
   
}