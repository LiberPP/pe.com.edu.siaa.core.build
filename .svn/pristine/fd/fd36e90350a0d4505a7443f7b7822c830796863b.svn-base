package pe.com.edu.siaa.core.ejb.dao.admision.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Stateless;
import javax.persistence.Query;

import pe.com.edu.siaa.core.ejb.dao.admision.local.DocumentoRequeridoDaoLocal;
import pe.com.edu.siaa.core.ejb.dao.generic.impl.GenericAcademicoDAOImpl;
import pe.com.edu.siaa.core.model.jpa.admision.DocumentoRequerido;
import pe.com.edu.siaa.core.model.util.StringUtils;

/**
 * La Class DocumentoRequeridoDaoImpl.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 19:53:34 COT 2017
 * @since SIAA-CORE 2.1
 */
@Stateless
public class DocumentoRequeridoDaoImpl extends  GenericAcademicoDAOImpl<Long, DocumentoRequerido> implements DocumentoRequeridoDaoLocal  {

    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.DocumentoRequeridoDaoLocal#listarDocumentoRequerido(pe.com.edu.siaa.core.model.jpa.seguridad.DocumentoRequerido)
     */  
    @Override	 
    public List<DocumentoRequerido> listarDocumentoRequerido(String idPostulante) {
        Query query = generarQueryListaDocumentoRequerido(idPostulante);
        //query.setFirstResult(documentoRequerido.getStartRow());
        //query.setMaxResults(documentoRequerido.getOffset());
        return query.getResultList();
    }   
    @Override	 
    public boolean eliminarDocumentoRequerido(String idPostulante) throws Exception {
    	boolean resultado = false;
    	Map<String, Object> parametros = new HashMap<String, Object>();
        StringBuilder jpaql = new StringBuilder();
        jpaql.append(" delete from DocumentoRequerido o where  o.postulante.idPostulante=:idPostulante ");
        parametros.put("idPostulante", idPostulante);
        Query query = createQuery(jpaql.toString(), parametros);
        query.executeUpdate();
        return resultado;
    }
    /**
     * Generar query lista DocumentoRequerido.
     *
     * @param DocumentoRequeridoDTO el documentoRequerido
     * @param esContador el es contador
     * @return the query
     */
    private Query generarQueryListaDocumentoRequerido(String idPostulante) {
        Map<String, Object> parametros = new HashMap<String, Object>();
        StringBuilder jpaql = new StringBuilder();
        jpaql.append(" select o from DocumentoRequerido o  left join fetch  o.itemByDocumento where 1=1 and o.postulante.idPostulante=:idPostulante ");
        parametros.put("idPostulante", idPostulante);
        Query query = createQuery(jpaql.toString(), parametros);
        return query;
    }

  
    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.DocumentoRequeridoDaoLocal#generarIdDocumentoRequerido()
     */
	 @Override
    public Long generarIdDocumentoRequerido() {
        Long resultado = 1L;
        Query query = createQuery("select max(o.idDocumentoRequerido) from DocumentoRequerido o", null);
        List<Object> listLong =  query.getResultList();
        if (listLong != null && listLong.size() > 0 && listLong.get(0) != null)  {
            Long ultimoIdGenerado = Long.valueOf(listLong.get(0).toString());
            if (!StringUtils.isNullOrEmpty(ultimoIdGenerado)) {
                resultado = resultado + ultimoIdGenerado;
            }
        }
        return resultado;
    }
   
}