package pe.com.edu.siaa.core.ejb.service.rest.matricula.impl;

import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.UriInfo;

import pe.com.edu.siaa.core.ejb.factory.TransferDataObjectUtil;
import pe.com.edu.siaa.core.ejb.service.matricula.local.MatriculaServiceLocal;
import pe.com.edu.siaa.core.ejb.service.rest.impl.GenericServiceRestImpl;
import pe.com.edu.siaa.core.model.dto.matricula.AperturaCierreMatriculaDTO;
import pe.com.edu.siaa.core.model.type.AccionType;
import pe.com.edu.siaa.core.vo.ResultadoRestVO;


/**
 * La Class AperturaCierreMatriculaRestController.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 13:43:32 COT 2017
 * @since SIAA-CORE 2.1
 */
@Stateless
@Path("/aperturaCierreMatriculaRestController")
@Consumes(MediaType.APPLICATION_JSON )
@Produces(MediaType.APPLICATION_JSON)
public class AperturaCierreMatriculaRestController extends GenericServiceRestImpl {
 
	@EJB
	private transient MatriculaServiceLocal matriculaServiceLocal;
	
	@POST
	public ResultadoRestVO<AperturaCierreMatriculaDTO> crear(AperturaCierreMatriculaDTO aperturaCierreMatricula) throws Exception {
		return controladorAccion(aperturaCierreMatricula,AccionType.CREAR);
	}
	@PUT
	public ResultadoRestVO<AperturaCierreMatriculaDTO> modificar(AperturaCierreMatriculaDTO aperturaCierreMatricula) throws Exception {
		return controladorAccion(aperturaCierreMatricula,AccionType.MODIFICAR);
	}
	@DELETE
	@Path("/{id}")
	public ResultadoRestVO<AperturaCierreMatriculaDTO> eliminar(@PathParam("id") String idAperturaCierreMatricula) throws Exception {
		AperturaCierreMatriculaDTO aperturaCierreMatricula = new AperturaCierreMatriculaDTO();
		aperturaCierreMatricula.setIdAperturaCierreMatricula(idAperturaCierreMatricula);		
		return controladorAccion(aperturaCierreMatricula,AccionType.ELIMINAR);
	}
	private ResultadoRestVO<AperturaCierreMatriculaDTO> controladorAccion(AperturaCierreMatriculaDTO aperturaCierreMatricula, AccionType accionType){
		ResultadoRestVO<AperturaCierreMatriculaDTO> resultado = new ResultadoRestVO<AperturaCierreMatriculaDTO>();
		 try {
    		resultado.setObjetoResultado(matriculaServiceLocal.controladorAccionAperturaCierreMatricula(aperturaCierreMatricula,accionType));
		} catch (Exception e) {
			parsearResultadoError(e, resultado);
		}
		return resultado;
	}
	@GET
	@Path("/get/{id}")
	public ResultadoRestVO<AperturaCierreMatriculaDTO> finById(@PathParam("id") String idAperturaCierreMatricula) throws Exception {
		AperturaCierreMatriculaDTO aperturaCierreMatricula = new AperturaCierreMatriculaDTO();
		aperturaCierreMatricula.setIdAperturaCierreMatricula(idAperturaCierreMatricula);
		return controladorAccion(aperturaCierreMatricula,AccionType.FIND_BY_ID);
	}
	
	@GET
    @Path("/listar")
	public ResultadoRestVO<AperturaCierreMatriculaDTO> listarAperturaCierreMatricula(@Context UriInfo info){
		ResultadoRestVO<AperturaCierreMatriculaDTO> resultado = new ResultadoRestVO<AperturaCierreMatriculaDTO>();
		AperturaCierreMatriculaDTO aperturaCierreMatricula = transferUriInfo(info);
		 try {
    		resultado.setListaResultado(matriculaServiceLocal.listarAperturaCierreMatricula(aperturaCierreMatricula));
		} catch (Exception e) {
			parsearResultadoError(e, resultado);
		}
		return resultado;
	}
	@GET
    @Path("/contar")
	public ResultadoRestVO<Integer> contarListarAperturaCierreMatricula(@Context UriInfo info){
		ResultadoRestVO<Integer> resultado = new ResultadoRestVO<Integer>();
		AperturaCierreMatriculaDTO aperturaCierreMatricula = transferUriInfo(info);
		 try {
    		resultado.setObjetoResultado(matriculaServiceLocal.contarListarAperturaCierreMatricula(aperturaCierreMatricula));
		} catch (Exception e) {
			parsearResultadoError(e, resultado);
		}
		return resultado;
	}
	@GET
    @Path("/")
	public ResultadoRestVO<AperturaCierreMatriculaDTO> inicializarAperturaCierreMatricula(@Context UriInfo info) throws Exception {
	     AperturaCierreMatriculaDTO aperturaCierreMatricula = transferUriInfo(info);
		 ResultadoRestVO<AperturaCierreMatriculaDTO> resultado = new ResultadoRestVO<AperturaCierreMatriculaDTO>();
		 try {
    		resultado.setObjetoResultado(aperturaCierreMatricula);
		} catch (Exception e) {
			parsearResultadoError(e, resultado);
		}
		return resultado;
	}
	private AperturaCierreMatriculaDTO transferUriInfo(@Context UriInfo info) {
		AperturaCierreMatriculaDTO resultado = TransferDataObjectUtil.transferObjetoEntityGetRestDTO(info,AperturaCierreMatriculaDTO.class);
		return resultado;
	}
}