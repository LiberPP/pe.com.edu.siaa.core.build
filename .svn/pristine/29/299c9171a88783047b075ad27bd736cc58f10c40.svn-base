package pe.com.edu.siaa.core.ejb.dao.pago.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Stateless;
import javax.persistence.Query;

import pe.com.edu.siaa.core.ejb.dao.generic.impl.GenericAcademicoDAOImpl;
import pe.com.edu.siaa.core.ejb.dao.pago.local.PlanPagosDaoLocal;
import pe.com.edu.siaa.core.model.dto.pago.PlanPagosDTO;
import pe.com.edu.siaa.core.model.jpa.pago.PlanPagos;
import pe.com.edu.siaa.core.model.util.StringUtils;

/**
 * La Class PlanPagosDaoImpl.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 19:53:42 COT 2017
 * @since SIAA-CORE 2.1
 */
@Stateless
public class PlanPagosDaoImpl extends  GenericAcademicoDAOImpl<String, PlanPagos> implements PlanPagosDaoLocal  {

    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.PlanPagosDaoLocal#listarPlanPagos(pe.com.edu.siaa.core.model.jpa.seguridad.PlanPagos)
     */  
    @Override	 
    public List<PlanPagos> listarPlanPagos(PlanPagosDTO planPagos) {
        Query query = generarQueryListaPlanPagos(planPagos, false);
        query.setFirstResult(planPagos.getStartRow());
        query.setMaxResults(planPagos.getOffset());
        return query.getResultList();
    }   
   
    /**
     * Generar query lista PlanPagos.
     *
     * @param PlanPagosDTO el planPagos
     * @param esContador el es contador
     * @return the query
     */
    private Query generarQueryListaPlanPagos(PlanPagosDTO planPagos, boolean esContador) {
    	String idAlumno = "";
        Map<String, Object> parametros = new HashMap<String, Object>();
        StringBuilder jpaql = new StringBuilder();
        if (esContador) {
            jpaql.append(" select count(o.idPlanPagos) from PlanPagos o where 1=1 ");
        } else {
            jpaql.append(" select o from PlanPagos o where 1=1 ");           
        }
        if (planPagos.getAnhoSemestre() != null && !StringUtils.isNullOrEmpty(planPagos.getAnhoSemestre().getIdAnhoSemestre())) {
        	 jpaql.append(" and o.anhoSemestre.idAnhoSemestre =:idAnhoSemestre ");
	          parametros.put("idAnhoSemestre",planPagos.getAnhoSemestre().getIdAnhoSemestre());
        }
        if (planPagos.getAlumno() != null && !StringUtils.isNullOrEmpty(planPagos.getAlumno().getIdAlumno())) {
        	idAlumno = planPagos.getAlumno().getIdAlumno();
        }
        jpaql.append(" and o.alumno.idAlumno =:idAlumno ");
        parametros.put("idAlumno",idAlumno);
        
		if (!StringUtils.isNullOrEmpty(planPagos.getSearch())) {
	          jpaql.append(" and upper(o.idPlanPagos) like :search ");
	          parametros.put("search", "%" + planPagos.getSearch().toUpperCase() + "%");
	    } else {
			if (!StringUtils.isNullOrEmpty(planPagos.getFechaCreacion())) {
				jpaql.append(" and o.fechaCreacion = :fechaCreacion ");
				parametros.put("fechaCreacion", planPagos.getFechaCreacion());
			}
			if (!StringUtils.isNullOrEmpty(planPagos.getUsuarioCreacion())) {
				jpaql.append(" and upper(o.usuarioCreacion) like :usuarioCreacion ");
				parametros.put("usuarioCreacion", "%" + planPagos.getUsuarioCreacion().toUpperCase() + "%");
			}
			if (!StringUtils.isNullOrEmpty(planPagos.getFechaModificacion())) {
				jpaql.append(" and o.fechaModificacion = :fechaModificacion ");
				parametros.put("fechaModificacion", planPagos.getFechaModificacion());
			}
			if (!StringUtils.isNullOrEmpty(planPagos.getUsuarioModificacion())) {
				jpaql.append(" and upper(o.usuarioModificacion) like :usuarioModificacion ");
				parametros.put("usuarioModificacion", "%" + planPagos.getUsuarioModificacion().toUpperCase() + "%");
			}
		}
        if (!esContador) {
            //jpaql.append(" ORDER BY 1 ");
        }
        Query query = createQuery(jpaql.toString(), parametros);
        return query;
    }

    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.PlanPagosDaoLocal#contarListar{entity.getClassName()}(pe.com.edu.siaa.core.model.jpa.seguridad.PlanPagosDTO)
     */
	@Override
    public int contarListarPlanPagos(PlanPagosDTO planPagos) {
        int resultado = 0;
        try {
            //StringBuilder jpaql = new StringBuilder();
            Query query = generarQueryListaPlanPagos(planPagos, true);
            resultado = ((Long) query.getSingleResult()).intValue();
        } catch (Exception e) {
            resultado = 0;
        }
        return resultado;
    }
	
	@Override
	public String generarIdPlanPagos(String idAlumno,String idAnhoSemestre) throws Exception {
		String resultado = idAlumno + idAnhoSemestre;
		return resultado;
	}
    /* (non-Javadoc)
     * @see pe.com.edu.siaa.core.ejb.dao.seguridad.local.PlanPagosDaoLocal#generarIdPlanPagos()
     */
	 @Override
    public String generarIdPlanPagos() {
        String resultado = "1";
        Query query = createQuery("select max(o.idPlanPagos) from PlanPagos o", null);
        List<Object> listLong =  query.getResultList();
        if (listLong != null && listLong.size() > 0 && listLong.get(0) != null)  {
            Long ultimoIdGenerado = Long.valueOf(listLong.get(0).toString());
            if (!StringUtils.isNullOrEmpty(ultimoIdGenerado)) {
                resultado = resultado + ultimoIdGenerado;
            }
        }
        return resultado;
    }
   
}