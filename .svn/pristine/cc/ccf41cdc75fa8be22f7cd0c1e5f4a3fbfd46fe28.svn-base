package pe.com.edu.siaa.core.model.jpa.nota;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import pe.com.edu.siaa.core.model.jpa.matricula.DetMatricula;
import pe.com.edu.siaa.core.model.util.ConfiguracionEntityManagerUtil;

/**
 * La Class DetRegistroNota.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Tue Apr 18 09:57:01 COT 2017
 * @since SIAA-CORE 2.1
 */
@Entity
@Table(name = "DetRegistroNota", schema = ConfiguracionEntityManagerUtil.ESQUEMA_ACADEMICO)
public class DetRegistroNota implements Serializable {
 
    /** La Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;
   
    /** El id det registronota. */
    @Id
    @Column(name = "idDetRegistroNota" , length = 17)
    private String idDetRegistroNota;
   
    /** El registro nota. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idRegistroNota", referencedColumnName = "idRegistroNota")
    private RegistroNota registroNota;
   
    /** El det matricula. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idDetMatricula", referencedColumnName = "idDetMatricula")
    private DetMatricula detMatricula;
   
    /** El nota letra. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ponderadoCurso", referencedColumnName = "idNotaletra")
    private NotaLetra notaLetra;
   
    /** El nota letra by nota aplazado. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "notaAplazado", referencedColumnName = "idNotaletra")
    private NotaLetra notaLetraByNotaAplazado;
   
    /** El fecha creacion. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaCreacion")
    private Date fechaCreacion;
   
    /** El fecha modificacion. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaModificacion")
    private Date fechaModificacion;
   
    /** El fecha nota aplazado. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaNotaAplazado")
    private Date fechaNotaAplazado;
   
    /** El usuario creacion. */
    @Column(name = "usuarioCreacion" , length = 50)
    private String usuarioCreacion;
   
    /** El usuario modificacion. */
    @Column(name = "usuarioModificacion" , length = 50)
    private String usuarioModificacion;
   
    /** El det registro nota curso nota list. */
    @OneToMany(mappedBy = "detRegistroNota", fetch = FetchType.LAZY)
    private List<CursoNota> detRegistroNotaCursoNotaList = new ArrayList<CursoNota>();
    
    /**
     * Instancia un nuevo det registro nota.
     */
    public DetRegistroNota() {
    }
   
   
    /**
     * Instancia un nuevo det registro nota.
     *
     * @param idDetRegistroNota el id det registronota
     * @param registroNota el registro nota
     * @param detMatricula el det matricula
     * @param notaLetra el nota letra
     * @param notaLetraByNotaAplazado el nota letra by nota aplazado
     * @param fechaCreacion el fecha creacion
     * @param fechaModificacion el fecha modificacion
     * @param fechaNotaAplazado el fecha nota aplazado
     * @param usuarioCreacion el usuario creacion
     * @param usuarioModificacion el usuario modificacion
     */
    public DetRegistroNota(String idDetRegistroNota, RegistroNota registroNota,DetMatricula detMatricula,NotaLetra notaLetra,NotaLetra notaLetraByNotaAplazado,Date fechaCreacion, Date fechaModificacion, Date fechaNotaAplazado, String usuarioCreacion, String usuarioModificacion ) {
        super();
        this.idDetRegistroNota = idDetRegistroNota;
        this.registroNota = registroNota;
        this.detMatricula = detMatricula;
        this.notaLetra = notaLetra;
        this.notaLetraByNotaAplazado = notaLetraByNotaAplazado;
        this.fechaCreacion = fechaCreacion;
        this.fechaModificacion = fechaModificacion;
        this.fechaNotaAplazado = fechaNotaAplazado;
        this.usuarioCreacion = usuarioCreacion;
        this.usuarioModificacion = usuarioModificacion;
    }
   
    //get y set
    /**
     * Obtiene id det registroNota.
     *
     * @return id det registroNota
     */
     public String getIdDetRegistroNota() {
        return this.idDetRegistroNota;
    }
    /**
     * Establece el id det registroNota.
     *
     * @param idDetRegistroNota el new id det registroNota
     */
    public void setIdDetRegistroNota(String idDetRegistroNota) {
        this.idDetRegistroNota = idDetRegistroNota;
    }
    /**
     * Obtiene registro nota.
     *
     * @return registro nota
     */
     public RegistroNota getRegistroNota() {
        return this.registroNota;
    }
    /**
     * Establece el registro nota.
     *
     * @param registroNota el new registro nota
     */
    public void setRegistroNota(RegistroNota registroNota) {
        this.registroNota = registroNota;
    }
    /**
     * Obtiene det matricula.
     *
     * @return det matricula
     */
     public DetMatricula getDetMatricula() {
        return this.detMatricula;
    }
    /**
     * Establece el det matricula.
     *
     * @param detMatricula el new det matricula
     */
    public void setDetMatricula(DetMatricula detMatricula) {
        this.detMatricula = detMatricula;
    }
    /**
     * Obtiene nota letra.
     *
     * @return nota letra
     */
     public NotaLetra getNotaLetra() {
        return this.notaLetra;
    }
    /**
     * Establece el nota letra.
     *
     * @param notaLetra el new nota letra
     */
    public void setNotaLetra(NotaLetra notaLetra) {
        this.notaLetra = notaLetra;
    }
    /**
     * Obtiene nota letra by nota aplazado.
     *
     * @return nota letra by nota aplazado
     */
     public NotaLetra getNotaLetraByNotaAplazado() {
        return this.notaLetraByNotaAplazado;
    }
    /**
     * Establece el nota letra by nota aplazado.
     *
     * @param notaLetraByNotaAplazado el new nota letra by nota aplazado
     */
    public void setNotaLetraByNotaAplazado(NotaLetra notaLetraByNotaAplazado) {
        this.notaLetraByNotaAplazado = notaLetraByNotaAplazado;
    }
    /**
     * Obtiene fecha creacion.
     *
     * @return fecha creacion
     */
     public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    /**
     * Establece el fecha creacion.
     *
     * @param fechaCreacion el new fecha creacion
     */
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    /**
     * Obtiene fecha modificacion.
     *
     * @return fecha modificacion
     */
     public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    /**
     * Establece el fecha modificacion.
     *
     * @param fechaModificacion el new fecha modificacion
     */
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
    /**
     * Obtiene fecha nota aplazado.
     *
     * @return fecha nota aplazado
     */
     public Date getFechaNotaAplazado() {
        return this.fechaNotaAplazado;
    }
    /**
     * Establece el fecha nota aplazado.
     *
     * @param fechaNotaAplazado el new fecha nota aplazado
     */
    public void setFechaNotaAplazado(Date fechaNotaAplazado) {
        this.fechaNotaAplazado = fechaNotaAplazado;
    }
    /**
     * Obtiene usuario creacion.
     *
     * @return usuario creacion
     */
     public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    /**
     * Establece el usuario creacion.
     *
     * @param usuarioCreacion el new usuario creacion
     */
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    /**
     * Obtiene usuario modificacion.
     *
     * @return usuario modificacion
     */
     public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    /**
     * Establece el usuario modificacion.
     *
     * @param usuarioModificacion el new usuario modificacion
     */
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    /**
     * Establece el det registro nota curso nota list.
     *
     * @param detRegistroNotaCursoNotaList el new det registro nota curso nota list
     */
    public List<CursoNota> getDetRegistroNotaCursoNotaList(){
        return this.detRegistroNotaCursoNotaList;
    }
    /**
     * Establece el det registro nota list.
     *
     * @param detRegistroNotaList el new det registro nota list
     */
    public void setDetRegistroNotaCursoNotaList(List<CursoNota> detRegistroNotaCursoNotaList) {
        this.detRegistroNotaCursoNotaList = detRegistroNotaCursoNotaList;
    }   
    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((idDetRegistroNota == null) ? 0 : idDetRegistroNota.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        DetRegistroNota other = (DetRegistroNota) obj;
        if (idDetRegistroNota == null) {
            if (other.idDetRegistroNota != null) {
                return false;
            }
        } else if (!idDetRegistroNota.equals(other.idDetRegistroNota)) {
            return false;
        }
        return true;
    }
    
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "DetRegistroNota [idDetRegistronota=" + idDetRegistroNota + "]";
    }
   
}