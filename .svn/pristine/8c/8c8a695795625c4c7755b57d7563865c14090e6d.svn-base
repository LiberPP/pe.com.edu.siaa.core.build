package pe.com.builderp.core.escalafon.model.jpa;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import pe.com.edu.siaa.core.model.jpa.admision.EntidadUniversitaria;
import pe.com.edu.siaa.core.model.jpa.common.Item;
import pe.com.edu.siaa.core.model.jpa.matricula.Personal;
import pe.com.edu.siaa.core.model.util.ConfiguracionEntityManagerUtil;

/**
 * La Class ProyectoInvestigacion.
 * <ul>
 * <li>Copyright 2017 ndavilal -
 * ndavilal. Todos los derechos reservados.</li>
 * </ul>
 *
 * @author ndavilal
 * @version 2.1, Sun Dec 31 00:35:59 COT 2017
 * @since SIAA-CORE 2.1
 */
@Entity
@Table(name = "ProyectoInvestigacion", schema = ConfiguracionEntityManagerUtil.ESQUEMA_ESCALAFON)
public class ProyectoInvestigacion implements Serializable {
 
    /** La Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;
   
    /** El id proyecto investigacion. */
    @Id
    @Column(name = "idProyectoInvestigacion" , length = 32)
    private String idProyectoInvestigacion;
   
    /** El item by linea investigacion. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idLineaInvestigacion", referencedColumnName = "idItem")
    private Item itemByLineaInvestigacion;
   
    /** El nombre. */
    @Column(name = "nombre" , length = 150)
    private String nombre;
   
    /** El objetivo general. */
    @Column(name = "objetivoGeneral" , length = 200)
    private String objetivoGeneral;
   
    /** El objetivo especifico. */
    @Column(name = "objetivoEspecifico" , length = 200)
    private String objetivoEspecifico;
   
    /** El personal. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idPersonal", referencedColumnName = "idPersonal")
    private Personal personal;
   
    /** El entidad universitaria. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idEntidadUniversitaria", referencedColumnName = "idEntidadUniversitaria")
    private EntidadUniversitaria entidadUniversitaria;
   
    /** El fecha inicio. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaInicio")
    private Date fechaInicio;
   
    /** El fecha fin. */
    @Temporal( TemporalType.TIMESTAMP)
    @Column(name = "fechaFin")
    private Date fechaFin;
   
    /** El presupuesto. */
    @Column(name = "presupuesto" , precision = 18 , scale = 2)
    private BigDecimal presupuesto;
   
    /** El item by fuente financiamiento. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idFuenteFinanciamiento", referencedColumnName = "idItem")
    private Item itemByFuenteFinanciamiento;
   
    /** El estado. */
    @Column(name = "estado" , length = 1)
    private String estado;
   
    /** El proyecto investigacion proyecto investigacion difusion list. */
    @OneToMany(mappedBy = "proyectoInvestigacion", fetch = FetchType.LAZY)
    private List<ProyectoInvestigacionDifusion> proyectoInvestigacionProyectoInvestigacionDifusionList = new ArrayList<ProyectoInvestigacionDifusion>();
    
    /** El proyecto investigacion proyecto investigacion equipo list. */
    @OneToMany(mappedBy = "proyectoInvestigacion", fetch = FetchType.LAZY)
    private List<ProyectoInvestigacionEquipo> proyectoInvestigacionProyectoInvestigacionEquipoList = new ArrayList<ProyectoInvestigacionEquipo>();
    
    /**
     * Instancia un nuevo proyecto investigacion.
     */
    public ProyectoInvestigacion() {
    }
   
   
    /**
     * Instancia un nuevo proyecto investigacion.
     *
     * @param idProyectoInvestigacion el id proyecto investigacion
     * @param itemByLineaInvestigacion el item by linea investigacion
     * @param nombre el nombre
     * @param objetivoGeneral el objetivo general
     * @param objetivoEspecifico el objetivo especifico
     * @param personal el personal
     * @param entidadUniversitaria el entidad universitaria
     * @param fechaInicio el fecha inicio
     * @param fechaFin el fecha fin
     * @param presupuesto el presupuesto
     * @param itemByFuenteFinanciamiento el item by fuente financiamiento
     * @param estado el estado
     */
    public ProyectoInvestigacion(String idProyectoInvestigacion, Item itemByLineaInvestigacion,String nombre, String objetivoGeneral, String objetivoEspecifico, Personal personal,EntidadUniversitaria entidadUniversitaria,Date fechaInicio, Date fechaFin, BigDecimal presupuesto, Item itemByFuenteFinanciamiento,String estado ) {
        super();
        this.idProyectoInvestigacion = idProyectoInvestigacion;
        this.itemByLineaInvestigacion = itemByLineaInvestigacion;
        this.nombre = nombre;
        this.objetivoGeneral = objetivoGeneral;
        this.objetivoEspecifico = objetivoEspecifico;
        this.personal = personal;
        this.entidadUniversitaria = entidadUniversitaria;
        this.fechaInicio = fechaInicio;
        this.fechaFin = fechaFin;
        this.presupuesto = presupuesto;
        this.itemByFuenteFinanciamiento = itemByFuenteFinanciamiento;
        this.estado = estado;
    }
   
    //get y set
    /**
     * Obtiene id proyecto investigacion.
     *
     * @return id proyecto investigacion
     */
     public String getIdProyectoInvestigacion() {
        return this.idProyectoInvestigacion;
    }
    /**
     * Establece el id proyecto investigacion.
     *
     * @param idProyectoInvestigacion el new id proyecto investigacion
     */
    public void setIdProyectoInvestigacion(String idProyectoInvestigacion) {
        this.idProyectoInvestigacion = idProyectoInvestigacion;
    }
    /**
     * Obtiene item by linea investigacion.
     *
     * @return item by linea investigacion
     */
     public Item getItemByLineaInvestigacion() {
        return this.itemByLineaInvestigacion;
    }
    /**
     * Establece el item by linea investigacion.
     *
     * @param itemByLineaInvestigacion el new item by linea investigacion
     */
    public void setItemByLineaInvestigacion(Item itemByLineaInvestigacion) {
        this.itemByLineaInvestigacion = itemByLineaInvestigacion;
    }
    /**
     * Obtiene nombre.
     *
     * @return nombre
     */
     public String getNombre() {
        return this.nombre;
    }
    /**
     * Establece el nombre.
     *
     * @param nombre el new nombre
     */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    /**
     * Obtiene objetivo general.
     *
     * @return objetivo general
     */
     public String getObjetivoGeneral() {
        return this.objetivoGeneral;
    }
    /**
     * Establece el objetivo general.
     *
     * @param objetivoGeneral el new objetivo general
     */
    public void setObjetivoGeneral(String objetivoGeneral) {
        this.objetivoGeneral = objetivoGeneral;
    }
    /**
     * Obtiene objetivo especifico.
     *
     * @return objetivo especifico
     */
     public String getObjetivoEspecifico() {
        return this.objetivoEspecifico;
    }
    /**
     * Establece el objetivo especifico.
     *
     * @param objetivoEspecifico el new objetivo especifico
     */
    public void setObjetivoEspecifico(String objetivoEspecifico) {
        this.objetivoEspecifico = objetivoEspecifico;
    }
    /**
     * Obtiene personal.
     *
     * @return personal
     */
     public Personal getPersonal() {
        return this.personal;
    }
    /**
     * Establece el personal.
     *
     * @param personal el new personal
     */
    public void setPersonal(Personal personal) {
        this.personal = personal;
    }
    /**
     * Obtiene entidad universitaria.
     *
     * @return entidad universitaria
     */
     public EntidadUniversitaria getEntidadUniversitaria() {
        return this.entidadUniversitaria;
    }
    /**
     * Establece el entidad universitaria.
     *
     * @param entidadUniversitaria el new entidad universitaria
     */
    public void setEntidadUniversitaria(EntidadUniversitaria entidadUniversitaria) {
        this.entidadUniversitaria = entidadUniversitaria;
    }
    /**
     * Obtiene fecha inicio.
     *
     * @return fecha inicio
     */
     public Date getFechaInicio() {
        return this.fechaInicio;
    }
    /**
     * Establece el fecha inicio.
     *
     * @param fechaInicio el new fecha inicio
     */
    public void setFechaInicio(Date fechaInicio) {
        this.fechaInicio = fechaInicio;
    }
    /**
     * Obtiene fecha fin.
     *
     * @return fecha fin
     */
     public Date getFechaFin() {
        return this.fechaFin;
    }
    /**
     * Establece el fecha fin.
     *
     * @param fechaFin el new fecha fin
     */
    public void setFechaFin(Date fechaFin) {
        this.fechaFin = fechaFin;
    }
    /**
     * Obtiene presupuesto.
     *
     * @return presupuesto
     */
     public BigDecimal getPresupuesto() {
        return this.presupuesto;
    }
    /**
     * Establece el presupuesto.
     *
     * @param presupuesto el new presupuesto
     */
    public void setPresupuesto(BigDecimal presupuesto) {
        this.presupuesto = presupuesto;
    }
    /**
     * Obtiene item by fuente financiamiento.
     *
     * @return item by fuente financiamiento
     */
     public Item getItemByFuenteFinanciamiento() {
        return this.itemByFuenteFinanciamiento;
    }
    /**
     * Establece el item by fuente financiamiento.
     *
     * @param itemByFuenteFinanciamiento el new item by fuente financiamiento
     */
    public void setItemByFuenteFinanciamiento(Item itemByFuenteFinanciamiento) {
        this.itemByFuenteFinanciamiento = itemByFuenteFinanciamiento;
    }
    /**
     * Obtiene estado.
     *
     * @return estado
     */
     public String getEstado() {
        return this.estado;
    }
    /**
     * Establece el estado.
     *
     * @param estado el new estado
     */
    public void setEstado(String estado) {
        this.estado = estado;
    }
    /**
     * Establece el proyecto investigacion proyecto investigacion difusion list.
     *
     * @param proyectoInvestigacionProyectoInvestigacionDifusionList el new proyecto investigacion proyecto investigacion difusion list
     */
    public List<ProyectoInvestigacionDifusion> getProyectoInvestigacionProyectoInvestigacionDifusionList(){
        return this.proyectoInvestigacionProyectoInvestigacionDifusionList;
    }
    /**
     * Establece el proyecto investigacion list.
     *
     * @param proyectoInvestigacionList el new proyecto investigacion list
     */
    public void setProyectoInvestigacionProyectoInvestigacionDifusionList(List<ProyectoInvestigacionDifusion> proyectoInvestigacionProyectoInvestigacionDifusionList) {
        this.proyectoInvestigacionProyectoInvestigacionDifusionList = proyectoInvestigacionProyectoInvestigacionDifusionList;
    }   
    /**
     * Establece el proyecto investigacion proyecto investigacion equipo list.
     *
     * @param proyectoInvestigacionProyectoInvestigacionEquipoList el new proyecto investigacion proyecto investigacion equipo list
     */
    public List<ProyectoInvestigacionEquipo> getProyectoInvestigacionProyectoInvestigacionEquipoList(){
        return this.proyectoInvestigacionProyectoInvestigacionEquipoList;
    }
    /**
     * Establece el proyecto investigacion list.
     *
     * @param proyectoInvestigacionList el new proyecto investigacion list
     */
    public void setProyectoInvestigacionProyectoInvestigacionEquipoList(List<ProyectoInvestigacionEquipo> proyectoInvestigacionProyectoInvestigacionEquipoList) {
        this.proyectoInvestigacionProyectoInvestigacionEquipoList = proyectoInvestigacionProyectoInvestigacionEquipoList;
    }   
    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((idProyectoInvestigacion == null) ? 0 : idProyectoInvestigacion.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        ProyectoInvestigacion other = (ProyectoInvestigacion) obj;
        if (idProyectoInvestigacion == null) {
            if (other.idProyectoInvestigacion != null) {
                return false;
            }
        } else if (!idProyectoInvestigacion.equals(other.idProyectoInvestigacion)) {
            return false;
        }
        return true;
    }
    
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "ProyectoInvestigacion [idProyectoInvestigacion=" + idProyectoInvestigacion + "]";
    }
   
}